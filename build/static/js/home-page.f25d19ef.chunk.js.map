{"version":3,"sources":["views/HomePage.js","services/themoviedb-api.js","components/MoviesList/MoviesList.js"],"names":["HomePage","state","movies","isLoading","this","setState","fetchPopularMovies","then","finally","length","Component","API_KEY","BASE_URL","URL_POPULAR","URL_ID","URL_QUERY","BASE_IMG_URL","Axios","get","params","page","api_key","data","results","catch","error","fetchMovieByID","id","language","fetchCreditsMovie","cast","fetchReviewsMovie","fetchMoviesByQuery","query","include_adult","withRouter","location","className","map","title","to","pathname","routes","from"],"mappings":"oPAKMA,E,4MACJC,MAAQ,CACNC,OAAQ,GACRC,WAAW,G,8LAIXC,KAAKC,SAAS,CAAEF,WAAW,I,SAErBG,cACHC,MAAK,SAAAL,GACJ,EAAKG,SAAS,CAAEH,cAEjBM,SAAQ,kBAAM,EAAKH,SAAS,CAAEF,WAAW,O,qIAGpC,IAAD,EACuBC,KAAKH,MAA3BC,EADD,EACCA,OAAQC,EADT,EACSA,UAChB,OACE,qCACE,gDACCA,GAAa,cAAC,IAAD,IACbD,EAAOO,OAAS,GAAK,cAAC,IAAD,CAAYP,OAAQA,W,GAtB3BQ,aA4BRV,a,gCCjCf,iOAEMW,EAAU,mCACVC,EAAW,gCACXC,EAAW,UAAMD,EAAN,sBACXE,EAAM,UAAMF,EAAN,UACNG,EAAS,UAAMH,EAAN,gBAETI,EAAe,uCAErB,SAASV,IACP,OAAOW,IAAMC,IAAN,UAAaL,GAAe,CACjCM,OAAQ,CAAEC,KAAM,EAAGC,QAASV,KAE3BJ,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASC,EAAeC,GACtB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,GAAM,CACjCR,OAAQ,CAAEE,QAASV,EAASiB,SAAU,WAErCrB,MAAK,qBAAGe,QACRE,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASI,EAAkBF,GACzB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,EAAtB,YAAoC,CACzCR,OAAQ,CAAEE,QAASV,EAASiB,SAAU,WAErCrB,MAAK,qBAAGe,KAAQQ,QAChBN,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASM,EAAkBJ,GACzB,OAAOV,IAAMC,IAAN,UAAaJ,GAAb,OAAsBa,EAAtB,YAAoC,CACzCR,OAAQ,CAAEC,KAAM,EAAGC,QAASV,EAASiB,SAAU,WAE9CrB,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,KAGpB,SAASO,EAAmBC,GAC1B,OAAOhB,IAAMC,IAAN,UAAaH,GAAa,CAC/BI,OAAQ,CAAEC,KAAM,EAAGC,QAASV,EAASiB,SAAU,QAASM,eAAe,EAAMD,MAAOA,KAEnF1B,MAAK,qBAAGe,KAAQC,WAChBC,OAAM,SAAAC,GAAK,OAAIA,O,mGCvBLU,eArBI,SAAC,GAA0B,IAAxBjC,EAAuB,EAAvBA,OAAQkC,EAAe,EAAfA,SAC5B,OACE,oBAAIC,UAAU,aAAd,SACGnC,EAAOoC,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,MAAP,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOxC,OAAZ,YAAsByB,GAC9B1B,MAAO,CACL0C,KAAMP,IAJZ,SAQGG,KATIZ","file":"static/js/home-page.f25d19ef.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport Loader from '../components/Loader';\r\nimport { fetchPopularMovies } from '../services/themoviedb-api';\r\nimport MoviesList from '../components/MoviesList';\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    await fetchPopularMovies()\r\n      .then(movies => {\r\n        this.setState({ movies });\r\n      })\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { movies, isLoading } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Trending today</h1>\r\n        {isLoading && <Loader />}\r\n        {movies.length > 0 && <MoviesList movies={movies} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = '8add86c956039dd3121ecd9270a2bde1';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst URL_POPULAR = `${BASE_URL}trending/movie/day`;\r\nconst URL_ID = `${BASE_URL}movie/`;\r\nconst URL_QUERY = `${BASE_URL}search/movie`;\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction fetchPopularMovies() {\r\n  return Axios.get(`${URL_POPULAR}`, {\r\n    params: { page: 1, api_key: API_KEY },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMovieByID(id) {\r\n  return Axios.get(`${URL_ID}${id}`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data }) => data)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchCreditsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/credits`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { cast } }) => cast)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchReviewsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/reviews`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMoviesByQuery(query) {\r\n  return Axios.get(`${URL_QUERY}`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US', include_adult: true, query: query },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nexport {\r\n  fetchPopularMovies,\r\n  fetchMovieByID,\r\n  fetchCreditsMovie,\r\n  fetchReviewsMovie,\r\n  fetchMoviesByQuery,\r\n  BASE_IMG_URL,\r\n};\r\n","import { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <ul className=\"MoviesList\">\r\n      {movies.map(({ id, title }) => (\r\n        <li key={id}>\r\n          <Link\r\n            to={{\r\n              pathname: `${routes.movies}/${id}`,\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n"],"sourceRoot":""}