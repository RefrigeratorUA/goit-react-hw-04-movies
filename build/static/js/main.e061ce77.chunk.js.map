{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Modal/Modal.js","services/pixabay-api.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onSubmit","props","trim","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","transition","Zoom","toLowerCase","this","className","type","disabled","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","src","alt","largeImageURL","getLargeImageURL","onClick","Button","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleClickBackdrop","currentTarget","window","addEventListener","removeEventListener","children","createPortal","fetchImages","page","fetch","then","response","ok","json","Promise","reject","Error","hits","ImageGallery","images","isLoading","btnStatus","showModal","imageAlt","imageStatus","handleScroll","scrollTo","top","documentElement","scrollHeight","behavior","handleLoadNextPage","nextPage","handleSwitchModalStatus","handleGetLargeImageURL","handleImageLoaded","prevProps","prevState","prevQuery","prevPage","length","catch","finally","nextStateImages","push","message","map","el","index","webformatURL","tags","visible","color","height","width","onLoad","App","handleQueryFromSearchbar","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e061ce77.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast, Zoom } from 'react-toastify';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const { onSubmit } = this.props;\n    if (!query.trim()) {\n      toast.error('Input search query.', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        transition: Zoom,\n      });\n      return this.setState({ query: '' });\n    }\n    onSubmit(query.trim().toLowerCase());\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\" disabled={!query}>\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import PropTypes from 'prop-types';\n\nconst ImageGalleryItem = ({ src, alt, largeImageURL, getLargeImageURL }) => {\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        getLargeImageURL(largeImageURL, alt);\n      }}\n    >\n      <img src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  getLargeImageURL: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={() => onClick()}>\n      Load more\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n  handleClickBackdrop = e => {\n    if (e.target === e.currentTarget) this.props.onClose();\n  };\n\n  render() {\n    const { children } = this.props;\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleClickBackdrop}>\n        <div className=\"Modal\">{children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","const BASE_URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal';\nconst API_KEY = '19265918-53e7e1b4cc966fb2ac418e7ff';\nconst IMAGES_PER_PAGE = 12;\n\nfunction fetchImages(query, page) {\n  return fetch(`${BASE_URL}&key=${API_KEY}&q=${query}&page=${page}&per_page=${IMAGES_PER_PAGE}`)\n    .then(response => {\n      if (response.ok) return response.json();\n      return Promise.reject(new Error(`По запросу \"${query}\" ничего не найдено!`));\n    })\n    .then(({ hits }) => hits);\n}\n\nexport { fetchImages };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport Modal from '../Modal';\nimport { fetchImages } from '../../services/pixabay-api';\n\nclass ImageGallery extends Component {\n  state = {\n    query: this.props.query,\n    page: 1,\n    images: [],\n    isLoading: false,\n    btnStatus: false,\n    showModal: false,\n    largeImageURL: '',\n    imageAlt: '',\n    error: null,\n    imageStatus: 'loading',\n  };\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = prevProps;\n    const { page: prevPage } = prevState;\n    const { query } = this.props;\n    const { page } = this.state;\n\n    if (prevQuery !== query) {\n      this.setState({ images: [], page: 1, query, isLoading: true, btnStatus: false });\n\n      fetchImages(query, 1)\n        .then(images => {\n          this.setState({ images });\n          if (images.length > 0) this.setState({ btnStatus: true });\n        })\n        .catch(error => {\n          this.setState({ error });\n        })\n        .finally(() => {\n          this.handleScroll();\n          this.setState({ isLoading: false });\n        });\n      return;\n    }\n\n    if (prevPage !== page) {\n      this.setState({ isLoading: true, btnStatus: false });\n      if (prevQuery === query && page === 1) this.setState({ images: [] });\n      fetchImages(query, page)\n        .then(images => {\n          const nextStateImages = [...this.state.images];\n          nextStateImages.push(...images);\n          this.setState({ images: nextStateImages, page });\n          if (images.length > 0) this.setState({ btnStatus: true });\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => {\n          this.handleScroll();\n          this.setState({ isLoading: false });\n        });\n      return;\n    }\n  }\n  handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  handleLoadNextPage = () => {\n    const nextPage = this.state.page + 1;\n    this.setState({ page: nextPage });\n  };\n  handleSwitchModalStatus = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal, imageStatus: 'loading' }));\n  };\n  handleGetLargeImageURL = (largeImageURL, imageAlt) => {\n    this.handleSwitchModalStatus();\n    largeImageURL ? this.setState({ largeImageURL }) : this.setState({ largeImageURL: '' });\n    imageAlt ? this.setState({ imageAlt }) : this.setState({ imageAlt: '' });\n  };\n  handleImageLoaded = () => {\n    this.setState({ imageStatus: 'loaded' });\n  };\n\n  render() {\n    const {\n      images,\n      isLoading,\n      btnStatus,\n      showModal,\n      largeImageURL,\n      imageAlt,\n      error,\n      imageStatus,\n    } = this.state;\n    return (\n      <>\n        {error && <h1>{error.message}</h1>}\n        <ul className=\"ImageGallery\">\n          {images.map((el, index) => {\n            const { webformatURL, tags, largeImageURL } = el;\n            return (\n              <ImageGalleryItem\n                key={index}\n                src={webformatURL}\n                alt={tags}\n                largeImageURL={largeImageURL}\n                getLargeImageURL={this.handleGetLargeImageURL}\n              />\n            );\n          })}\n        </ul>\n        {isLoading && (\n          <Loader\n            visible=\"true\"\n            type=\"Bars\"\n            color=\"#3f51b5\"\n            height={50}\n            width={50}\n            // timeout={3000} //3 secs\n            className=\"loader\"\n          />\n        )}\n        {btnStatus && <Button onClick={this.handleLoadNextPage} />}\n        {showModal && (\n          <Modal onClose={this.handleSwitchModalStatus}>\n            {imageStatus === 'loading' ? (\n              <>\n                <img src={largeImageURL} alt={imageAlt} onLoad={this.handleImageLoaded} />\n                <Loader\n                  visible=\"true\"\n                  type=\"ThreeDots\"\n                  color=\"#fff\"\n                  height={50}\n                  width={50}\n                  // timeout={3000} //3 secs\n                  className=\"loaderModal\"\n                />\n              </>\n            ) : (\n              <img src={largeImageURL} alt={imageAlt} />\n            )}\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string,\n};\n\nexport default ImageGallery;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    query: '',\n  };\n\n  handleQueryFromSearchbar = query => {\n    this.setState({ query });\n  };\n\n  render() {\n    return (\n      <>\n        <Searchbar onSubmit={this.handleQueryFromSearchbar} />\n        <ImageGallery query={this.state.query} />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}