{"version":3,"sources":["components/Button/Button.js","components/Card/Card.js","components/AddInfoNav/AddInfoNav.js","components/AddInfo/AddInfo.js","views/MovieDetailsPage.js","services/themoviedb-api.js","images/image-not-found.svg"],"names":["Button","onClick","type","className","Card","movie","title","poster_path","vote_average","overview","genres","src","BASE_IMG_URL","alt","ImgNotFound","length","map","gender","index","name","withRouter","url","location","exact","to","pathname","routes","cast","state","from","activeClassName","reviews","Cast","lazy","Reviews","AddInfo","path","component","MovieDetailsPage","locationFrom","handleButtonBack","history","props","push","home","this","setState","match","params","movieId","fetchMovieByID","then","Component","API_KEY","BASE_URL","URL_POPULAR","URL_ID","URL_QUERY","fetchPopularMovies","Axios","get","page","api_key","data","results","catch","error","id","language","fetchCreditsMovie","fetchReviewsMovie","fetchMoviesByQuery","query","include_adult"],"mappings":"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","file":"static/js/details-page.2c195e12.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Button = ({ onClick }) => {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={() => onClick()}>\n      Back\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import { BASE_IMG_URL } from '../../services/themoviedb-api';\r\nimport ImgNotFound from '../../images/image-not-found.svg';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Card = ({ movie }) => {\r\n  const {\r\n    title = 'Упс! Что пошло не так...',\r\n    poster_path,\r\n    vote_average,\r\n    overview,\r\n    genres = [],\r\n  } = movie;\r\n  return (\r\n    <div className=\"Card\">\r\n      <h1>{title}</h1>\r\n      {poster_path ? (\r\n        <img src={`${BASE_IMG_URL}${poster_path}`} alt={title} />\r\n      ) : (\r\n        <img src={ImgNotFound} alt=\"Изображение не найдено\" />\r\n      )}\r\n      <p>User Score: {vote_average > 0 ? vote_average * 10 : 0}%</p>\r\n      <h2>Overview</h2>\r\n      <p>{overview}</p>\r\n      <h3>Genres</h3>\r\n      {genres.length > 0 && (\r\n        <ul>\r\n          {genres.map((gender, index) => (\r\n            <li key={index}>{gender.name}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  movie: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import { NavLink, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nfunction AddInfoNav({ url, location }) {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <NavLink\r\n          exact\r\n          to={{\r\n            pathname: `${url}${routes.cast}`,\r\n            state: {\r\n              from: location,\r\n            },\r\n          }}\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Cast\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink\r\n          exact\r\n          to={{\r\n            pathname: `${url}${routes.reviews}`,\r\n            state: {\r\n              from: location,\r\n            },\r\n          }}\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink--active\"\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default withRouter(AddInfoNav);\r\n","import PropTypes from 'prop-types';\r\nimport { Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport AddInfoNav from '../AddInfoNav';\r\n\r\nconst Cast = lazy(() => import('../Cast' /* webpackChunkName: \"cast\" */));\r\nconst Reviews = lazy(() => import('../Reviews' /* webpackChunkName: \"reviews\" */));\r\n\r\nconst AddInfo = ({ url, path }) => {\r\n  return (\r\n    <>\r\n      <h4>Additional information</h4>\r\n      <AddInfoNav url={url} />\r\n      <Suspense>\r\n        <Switch>\r\n          <Route path={`${path}${routes.cast}`} component={Cast} />\r\n          <Route path={`${path}${routes.reviews}`} component={Reviews} />\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nAddInfo.propTypes = {\r\n  url: PropTypes.string,\r\n  path: PropTypes.string,\r\n};\r\n\r\nexport default AddInfo;\r\n","import { Component } from 'react';\r\nimport { fetchMovieByID } from '../services/themoviedb-api';\r\nimport routes from '../routes';\r\nimport Button from '../components/Button';\r\nimport Card from '../components/Card';\r\nimport AddInfo from '../components/AddInfo';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n    locationFrom: null,\r\n  };\r\n  async componentDidMount() {\r\n    const { location } = this.props;\r\n    const locationFrom = location.state.from ? location.state.from : null;\r\n    this.setState({ locationFrom });\r\n\r\n    if (this.props.match.params && this.props.match.params.movieId) {\r\n      const {\r\n        match: {\r\n          params: { movieId },\r\n        },\r\n      } = this.props;\r\n      await fetchMovieByID(movieId).then(movie => this.setState({ movie }));\r\n    }\r\n  }\r\n\r\n  handleButtonBack = () => {\r\n    const { history } = this.props;\r\n    const { locationFrom } = this.state;\r\n    if (locationFrom) {\r\n      return history.push(locationFrom);\r\n    }\r\n    history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { movie } = this.state;\r\n    return (\r\n      <>\r\n        {movie && (\r\n          <div className=\"Container\">\r\n            <hr />\r\n            <Button onClick={this.handleButtonBack} />\r\n            <Card movie={this.state.movie} />\r\n            <AddInfo url={match.url} path={match.path} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = '8add86c956039dd3121ecd9270a2bde1';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst URL_POPULAR = `${BASE_URL}trending/movie/day`;\r\nconst URL_ID = `${BASE_URL}movie/`;\r\nconst URL_QUERY = `${BASE_URL}search/movie`;\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction fetchPopularMovies() {\r\n  return Axios.get(`${URL_POPULAR}`, {\r\n    params: { page: 1, api_key: API_KEY },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMovieByID(id) {\r\n  return Axios.get(`${URL_ID}${id}`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data }) => data)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchCreditsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/credits`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { cast } }) => cast)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchReviewsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/reviews`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMoviesByQuery(query) {\r\n  return Axios.get(`${URL_QUERY}`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US', include_adult: true, query: query },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nexport {\r\n  fetchPopularMovies,\r\n  fetchMovieByID,\r\n  fetchCreditsMovie,\r\n  fetchReviewsMovie,\r\n  fetchMoviesByQuery,\r\n  BASE_IMG_URL,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/image-not-found.da4174d9.svg\";"],"sourceRoot":""}