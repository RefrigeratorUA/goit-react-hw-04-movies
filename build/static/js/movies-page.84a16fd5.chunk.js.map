{"version":3,"sources":["utils/parseQueryString.js","components/Notification/Notification.js","components/Searchbar/Searchbar.js","views/MoviesPage.js","services/themoviedb-api.js","components/MoviesList/MoviesList.js"],"names":["parseQueryString","query","queryString","parse","NotificationContainer","position","autoClose","hideProgressBar","newestOnTop","pauseOnHover","closeOnClick","draggable","progress","undefined","transition","Zoom","pauseOnFocusLoss","rtl","showErrorNotification","message","objSettings","toast","error","Searchbar","state","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onSubmit","props","trim","toLowerCase","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","MoviesPage","movies","handleFetchhMovies","fetchMoviesByQuery","then","handleQueryFromSearchbar","history","push","location","search","prevProps","prevState","prevQuery","length","MoviesList","API_KEY","BASE_URL","URL_POPULAR","URL_ID","URL_QUERY","BASE_IMG_URL","fetchPopularMovies","Axios","get","params","page","api_key","data","results","catch","fetchMovieByID","id","language","fetchCreditsMovie","cast","fetchReviewsMovie","include_adult","withRouter","map","title","to","pathname","routes","from"],"mappings":"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","file":"static/js/movies-page.84a16fd5.chunk.js","sourcesContent":["import queryString from 'query-string';\r\n\r\nexport default function parseQueryString(query) {\r\n  return queryString.parse(query);\r\n}\r\n","import PropTypes from 'prop-types';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst NotificationContainer = ({ position = 'top-right', autoClose = 3000 }) => {\n  return (\n    <ToastContainer\n      position={position}\n      autoClose={autoClose}\n      hideProgressBar={false}\n      newestOnTop={false}\n      pauseOnHover={true}\n      closeOnClick={true}\n      draggable={true}\n      progress={undefined}\n      transition={Zoom}\n      pauseOnFocusLoss\n      rtl={false}\n    />\n  );\n};\n\nconst showErrorNotification = (message, objSettings) => {\n  toast.error(message, objSettings);\n};\n\nNotificationContainer.propTypes = {\n  position: PropTypes.string,\n  autoClose: PropTypes.number,\n};\n\nexport { NotificationContainer, showErrorNotification };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { showErrorNotification } from '../Notification';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { query } = this.state;\n    const { onSubmit } = this.props;\n    if (!query.trim()) {\n      showErrorNotification('Input search query.', { position: 'top-center' });\n      return this.setState({ query: '' });\n    }\n    onSubmit(query.trim().toLowerCase());\n    this.setState({ query: '' });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <div className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            name=\"query\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import { Component } from 'react';\r\nimport parseQueryString from '../utils/parseQueryString';\r\nimport SearchBar from '../components/Searchbar';\r\nimport { NotificationContainer } from '../components/Notification';\r\nimport { fetchMoviesByQuery } from '../services/themoviedb-api';\r\nimport MoviesList from '../components/MoviesList';\r\n\r\nclass MoviesPage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n  async componentDidMount() {\r\n    const { query } = parseQueryString(this.props.location.search);\r\n    if (query) {\r\n      await this.handleFetchhMovies(query);\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const { query: prevQuery } = parseQueryString(prevProps.location.search);\r\n    const { query } = parseQueryString(this.props.location.search);\r\n    if (prevQuery !== query) {\r\n      await this.handleFetchhMovies(query);\r\n    }\r\n  }\r\n\r\n  handleFetchhMovies = query => {\r\n    fetchMoviesByQuery(query).then(movies => this.setState({ movies }));\r\n  };\r\n\r\n  handleQueryFromSearchbar = query => {\r\n    this.props.history.push({\r\n      ...this.props.location,\r\n      search: `query=${query}`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { movies, query } = this.state;\r\n    return (\r\n      <>\r\n        <SearchBar onSubmit={this.handleQueryFromSearchbar} />\r\n        {movies.length > 0 ? (\r\n          <MoviesList movies={movies} />\r\n        ) : query ? (\r\n          <h1>Не будем материться...</h1>\r\n        ) : null}\r\n        <NotificationContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesPage;\r\n","import Axios from 'axios';\r\n\r\nconst API_KEY = '8add86c956039dd3121ecd9270a2bde1';\r\nconst BASE_URL = 'https://api.themoviedb.org/3/';\r\nconst URL_POPULAR = `${BASE_URL}trending/movie/day`;\r\nconst URL_ID = `${BASE_URL}movie/`;\r\nconst URL_QUERY = `${BASE_URL}search/movie`;\r\n\r\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/original/';\r\n\r\nfunction fetchPopularMovies() {\r\n  return Axios.get(`${URL_POPULAR}`, {\r\n    params: { page: 1, api_key: API_KEY },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMovieByID(id) {\r\n  return Axios.get(`${URL_ID}${id}`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data }) => data)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchCreditsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/credits`, {\r\n    params: { api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { cast } }) => cast)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchReviewsMovie(id) {\r\n  return Axios.get(`${URL_ID}${id}/reviews`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US' },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nfunction fetchMoviesByQuery(query) {\r\n  return Axios.get(`${URL_QUERY}`, {\r\n    params: { page: 1, api_key: API_KEY, language: 'en-US', include_adult: true, query: query },\r\n  })\r\n    .then(({ data: { results } }) => results)\r\n    .catch(error => error);\r\n}\r\n\r\nexport {\r\n  fetchPopularMovies,\r\n  fetchMovieByID,\r\n  fetchCreditsMovie,\r\n  fetchReviewsMovie,\r\n  fetchMoviesByQuery,\r\n  BASE_IMG_URL,\r\n};\r\n","import { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <ul className=\"MoviesList\">\r\n      {movies.map(({ id, title }) => (\r\n        <li key={id}>\r\n          <Link\r\n            to={{\r\n              pathname: `${routes.movies}/${id}`,\r\n              state: {\r\n                from: location,\r\n              },\r\n            }}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n"],"sourceRoot":""}